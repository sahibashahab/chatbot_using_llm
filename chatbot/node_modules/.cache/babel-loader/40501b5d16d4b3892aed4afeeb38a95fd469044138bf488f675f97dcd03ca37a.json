{"ast":null,"code":"var _jsxFileName = \"D:\\\\office\\\\react1\\\\react\\\\chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport chatbotlogo from './assets/chat.jpg';\nimport addBtn from './assets/addBtn.png';\nimport sendBtn from './assets/send.svg';\nimport usericon from './assets/usericon.webp';\nimport c2clogo from './assets/chat.jpg';\nimport { sendMsgToGroq } from './api';\nimport { useRef, useState, useEffect } from 'react';\nimport mammoth from 'mammoth';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\nconst extractQuestionsFromText = text => {\n  const questionRegex = /[^.?!]*\\?/g;\n  return text.match(questionRegex) || [];\n};\nconst readFileContent = async file => {\n  const fileType = file.name.split('.').pop().toLowerCase();\n  if (fileType === 'txt') {\n    return await file.text();\n  } else if (fileType === 'docx') {\n    const arrayBuffer = await file.arrayBuffer();\n    const result = await mammoth.extractRawText({\n      arrayBuffer\n    });\n    return result.value;\n  } else if (fileType === 'pdf') {\n    const arrayBuffer = await file.arrayBuffer();\n    const pdf = await pdfjsLib.getDocument({\n      data: arrayBuffer\n    }).promise;\n    let text = '';\n    for (let i = 1; i <= pdf.numPages; i++) {\n      const page = await pdf.getPage(i);\n      const content = await page.getTextContent();\n      const pageText = content.items.map(item => item.str).join(' ');\n      text += pageText + '\\n';\n    }\n    return text;\n  } else {\n    throw new Error('Unsupported file type');\n  }\n};\nfunction App() {\n  _s();\n  const msgEnd = useRef(null);\n  const [setVoiceText] = useState('');\n  const [setRecognition] = useState(null);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [Input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([{\n    text: \"Hi, I am Chatbot, a state-of-the-art language model. I am designed to understand and generate human-like text based on truth.\",\n    isBot: true\n  }]);\n  useEffect(() => {\n    var _msgEnd$current;\n    (_msgEnd$current = msgEnd.current) === null || _msgEnd$current === void 0 ? void 0 : _msgEnd$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      const recognizer = new SpeechRecognition();\n      recognizer.continuous = false;\n      recognizer.interimResults = false;\n      recognizer.lang = 'en-US';\n      recognizer.onresult = async event => {\n        const transcript = event.results[0][0].transcript;\n        setVoiceText(transcript);\n        setMessages(prev => [...prev, {\n          text: transcript,\n          isBot: false\n        }]);\n        const res = await sendMsgToGroq(transcript);\n        setMessages(prev => [...prev, {\n          text: res,\n          isBot: true\n        }]);\n      };\n      setRecognition(recognizer);\n    }\n  });\n  const handleSend = async () => {\n    if (Input.trim() === \"\") return;\n    const text = Input;\n    setInput('');\n    setMessages(prev => [...prev, {\n      text,\n      isBot: false\n    }]);\n    const res = await sendMsgToGroq(text);\n    setMessages(prev => [...prev, {\n      text: res,\n      isBot: true\n    }]);\n  };\n  const handleEnter = async e => {\n    if (e.key === 'Enter') await handleSend();\n  };\n  const handleSaveChat = () => {\n    const currentDateTime = new Date().toLocaleString();\n    let saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (!Array.isArray(saved)) {\n      saved = [];\n    }\n    const newChat = {\n      date: currentDateTime,\n      messages: messages\n    };\n    saved.push(newChat);\n    localStorage.setItem('savedChats', JSON.stringify(saved));\n    alert('Chat saved successfully!');\n  };\n  const handleViewChat = () => {\n    const saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (saved && Array.isArray(saved)) {\n      setSavedChats(saved);\n      setShowDropdown(!showDropdown);\n    } else {\n      alert('No saved chats found.');\n    }\n  };\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const text = await readFileContent(file);\n      const questions = extractQuestionsFromText(text);\n      const answers = [];\n      for (const question of questions) {\n        setMessages(prev => [...prev, {\n          text: question,\n          isBot: false\n        }]);\n        const answer = await sendMsgToGroq(question);\n        answers.push({\n          q: question,\n          a: answer\n        });\n        setMessages(prev => [...prev, {\n          text: answer,\n          isBot: true\n        }]);\n      }\n      const content = answers.map(item => `Q: ${item.q}\\nA: ${item.a}`).join('\\n\\n');\n      const blob = new Blob([content], {\n        type: 'text/plain'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'chatbot_answers.txt';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      alert('Error reading file: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upperSide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperSideTop\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: chatbotlogo,\n            alt: \"Logo\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: () => window.location.reload(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"newchat\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), \"New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: handleSaveChat,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"savechat\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), \"Save Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"midBtn\",\n              onClick: handleViewChat,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: addBtn,\n                alt: \"viewchat\",\n                className: \"addBtn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), \"View Saved\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdownMenu\",\n              children: savedChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdownItem\",\n                onClick: () => {\n                  setMessages(chat.messages);\n                  setShowDropdown(false);\n                },\n                children: chat.date\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt,.docx,.pdf\",\n            onChange: handleFileUpload,\n            style: {\n              marginTop: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lowerSide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats\",\n        children: [messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat ${message.isBot ? \"left\" : \"right\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.isBot ? c2clogo : usericon,\n            alt: message.isBot ? \"Bot\" : \"User\",\n            className: \"chatIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"txt\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: msgEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatFooter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inp\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Send a Message\",\n            value: Input,\n            onKeyDown: handleEnter,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send\",\n            onClick: handleSend,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendBtn,\n              alt: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Gp+d/L6IfsM92bLbKE/nNLEnFl4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["chatbotlogo","addBtn","sendBtn","usericon","c2clogo","sendMsgToGroq","useRef","useState","useEffect","mammoth","pdfjsLib","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","extractQuestionsFromText","text","questionRegex","match","readFileContent","file","fileType","name","split","pop","toLowerCase","arrayBuffer","result","extractRawText","value","pdf","getDocument","data","promise","i","numPages","page","getPage","content","getTextContent","pageText","items","map","item","str","join","Error","App","_s","msgEnd","setVoiceText","setRecognition","savedChats","setSavedChats","showDropdown","setShowDropdown","Input","setInput","messages","setMessages","isBot","_msgEnd$current","current","scrollIntoView","behavior","SpeechRecognition","window","webkitSpeechRecognition","recognizer","continuous","interimResults","lang","onresult","event","transcript","results","prev","res","handleSend","trim","handleEnter","e","key","handleSaveChat","currentDateTime","Date","toLocaleString","saved","JSON","parse","localStorage","getItem","Array","isArray","newChat","date","push","setItem","stringify","alert","handleViewChat","handleFileUpload","target","files","questions","answers","question","answer","q","a","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","err","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","style","position","chat","index","accept","onChange","marginTop","ref","placeholder","onKeyDown","_c","$RefreshReg$"],"sources":["D:/office/react1/react/chatbot/src/App.js"],"sourcesContent":["import './App.css';\nimport chatbotlogo from './assets/chat.jpg';\nimport addBtn from './assets/addBtn.png';\nimport sendBtn from './assets/send.svg';\nimport usericon from './assets/usericon.webp';\nimport c2clogo from './assets/chat.jpg';\n\nimport { sendMsgToGroq } from './api';\nimport { useRef, useState, useEffect } from 'react';\n\nimport mammoth from 'mammoth';\nimport * as pdfjsLib from 'pdfjs-dist';\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\nconst extractQuestionsFromText = (text) => {\n  const questionRegex = /[^.?!]*\\?/g;\n  return text.match(questionRegex) || [];\n};\n\nconst readFileContent = async (file) => {\n  const fileType = file.name.split('.').pop().toLowerCase();\n\n  if (fileType === 'txt') {\n    return await file.text();\n  } else if (fileType === 'docx') {\n    const arrayBuffer = await file.arrayBuffer();\n    const result = await mammoth.extractRawText({ arrayBuffer });\n    return result.value;\n  } else if (fileType === 'pdf') {\n    const arrayBuffer = await file.arrayBuffer();\n    const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;\n    let text = '';\n    for (let i = 1; i <= pdf.numPages; i++) {\n      const page = await pdf.getPage(i);\n      const content = await page.getTextContent();\n      const pageText = content.items.map(item => item.str).join(' ');\n      text += pageText + '\\n';\n    }\n    return text;\n  } else {\n    throw new Error('Unsupported file type');\n  }\n};\n\nfunction App() {\n  const msgEnd = useRef(null);\n  const [setVoiceText] = useState('');\n  const [setRecognition] = useState(null);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [Input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([\n    {\n      text: \"Hi, I am Chatbot, a state-of-the-art language model. I am designed to understand and generate human-like text based on truth.\",\n      isBot: true,\n    }\n  ]);\n\n  useEffect(() => {\n    msgEnd.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      const recognizer = new SpeechRecognition();\n      recognizer.continuous = false;\n      recognizer.interimResults = false;\n      recognizer.lang = 'en-US';\n\n      recognizer.onresult = async (event) => {\n        const transcript = event.results[0][0].transcript;\n        setVoiceText(transcript);\n        setMessages(prev => [...prev, { text: transcript, isBot: false }]);\n        const res = await sendMsgToGroq(transcript);\n        setMessages(prev => [...prev, { text: res, isBot: true }]);\n      };\n\n      setRecognition(recognizer);\n    }\n  }, );\n\n  const handleSend = async () => {\n    if (Input.trim() === \"\") return;\n    const text = Input;\n    setInput('');\n    setMessages(prev => [...prev, { text, isBot: false }]);\n    const res = await sendMsgToGroq(text);\n    setMessages(prev => [...prev, { text: res, isBot: true }]);\n  };\n\n  const handleEnter = async (e) => {\n    if (e.key === 'Enter') await handleSend();\n  };\n\n  const handleSaveChat = () => {\n    const currentDateTime = new Date().toLocaleString();\n    let saved = JSON.parse(localStorage.getItem('savedChats'));\n\n    if (!Array.isArray(saved)) {\n      saved = [];\n    }\n\n    const newChat = {\n      date: currentDateTime,\n      messages: messages,\n    };\n\n    saved.push(newChat);\n    localStorage.setItem('savedChats', JSON.stringify(saved));\n    alert('Chat saved successfully!');\n  };\n\n  const handleViewChat = () => {\n    const saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (saved && Array.isArray(saved)) {\n      setSavedChats(saved);\n      setShowDropdown(!showDropdown);\n    } else {\n      alert('No saved chats found.');\n    }\n  };\n\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    try {\n      const text = await readFileContent(file);\n      const questions = extractQuestionsFromText(text);\n\n      const answers = [];\n      for (const question of questions) {\n        setMessages(prev => [...prev, { text: question, isBot: false }]);\n        const answer = await sendMsgToGroq(question);\n        answers.push({ q: question, a: answer });\n        setMessages(prev => [...prev, { text: answer, isBot: true }]);\n      }\n\n      const content = answers.map(item => `Q: ${item.q}\\nA: ${item.a}`).join('\\n\\n');\n      const blob = new Blob([content], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'chatbot_answers.txt';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n    } catch (err) {\n      alert('Error reading file: ' + err.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className=\"upperSide\">\n          <div className=\"upperSideTop\">\n            <img src={chatbotlogo} alt=\"Logo\" className=\"logo\" />\n\n            <button className=\"midBtn\" onClick={() => window.location.reload()}>\n              <img src={addBtn} alt=\"newchat\" className=\"addBtn\" />\n              New Chat\n            </button>\n\n            <button className=\"midBtn\" onClick={handleSaveChat}>\n              <img src={addBtn} alt=\"savechat\" className=\"addBtn\" />\n              Save Chat\n            </button>\n\n            <div style={{ position: \"relative\" }}>\n              <button className=\"midBtn\" onClick={handleViewChat}>\n                <img src={addBtn} alt=\"viewchat\" className=\"addBtn\" />\n                View Saved\n              </button>\n\n              {showDropdown && (\n                <div className=\"dropdownMenu\">\n                  {savedChats.map((chat, index) => (\n                    <div\n                      key={index}\n                      className=\"dropdownItem\"\n                      onClick={() => {\n                        setMessages(chat.messages);\n                        setShowDropdown(false);\n                      }}\n                    >\n                      {chat.date}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            <input\n              type=\"file\"\n              accept=\".txt,.docx,.pdf\"\n              onChange={handleFileUpload}\n              style={{ marginTop: \"10px\" }}\n            />\n\n          </div>\n        </div>\n\n        <div className=\"lowerSide\"></div>\n      </div>\n\n      <div className=\"main\">\n        <div className=\"chats\">\n          {messages.map((message, i) => (\n            <div key={i} className={`chat ${message.isBot ? \"left\" : \"right\"}`}>\n              <img\n                src={message.isBot ? c2clogo : usericon}\n                alt={message.isBot ? \"Bot\" : \"User\"}\n                className=\"chatIcon\"\n              />\n              <p className=\"txt\">{message.text}</p>\n            </div>\n          ))}\n          <div ref={msgEnd} />\n        </div>\n\n        <div className=\"chatFooter\">\n          <div className=\"inp\">\n            <input\n              type=\"text\"\n              placeholder=\"Send a Message\"\n              value={Input}\n              onKeyDown={handleEnter}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button className=\"send\" onClick={handleSend}>\n              <img src={sendBtn} alt=\"Send\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}