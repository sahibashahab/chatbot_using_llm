{"ast":null,"code":"var _jsxFileName = \"D:\\\\office\\\\react1\\\\react\\\\chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport chatbotlogo from './assets/chat.jpg';\nimport addBtn from './assets/addBtn.png';\nimport sendBtn from './assets/send.svg';\nimport usericon from './assets/usericon.webp';\nimport c2clogo from './assets/chat.jpg';\nimport upload from './assets/upload.png';\nimport { useRef, useState, useEffect } from 'react';\n\n// Replace this with your actual API call URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/chat';\nfunction App() {\n  _s();\n  const msgEnd = useRef(null);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([{\n    text: \"Hi, I am Chatbot, a state-of-the-art language model. I am designed to understand and generate human-like text based on truth.\",\n    isBot: true\n  }]);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    var _msgEnd$current;\n    (_msgEnd$current = msgEnd.current) === null || _msgEnd$current === void 0 ? void 0 : _msgEnd$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleSend = async () => {\n    if (input.trim() === \"\" && !selectedFile) return;\n\n    // Show user message in chat\n    let userText = input.trim();\n    if (selectedFile) {\n      userText += `\\n[File attached: ${selectedFile.name}]`;\n    }\n    setMessages(prev => [...prev, {\n      text: userText,\n      isBot: false\n    }]);\n\n    // Prepare FormData\n    const formData = new FormData();\n    formData.append('message', input.trim());\n    if (selectedFile) {\n      formData.append('file', selectedFile);\n    }\n    setInput('');\n    setSelectedFile(null);\n    try {\n      const res = await fetch(API_URL, {\n        method: 'POST',\n        body: formData\n        // Do NOT set 'Content-Type' header! Browser handles it.\n      });\n      if (!res.ok) {\n        throw new Error(`Server error: ${res.status}`);\n      }\n      const data = await res.text(); // Change to res.json() if backend returns JSON\n\n      setMessages(prev => [...prev, {\n        text: data,\n        isBot: true\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        text: `Error: ${error.message}`,\n        isBot: true\n      }]);\n    }\n  };\n  const handleEnter = async e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      await handleSend();\n    }\n  };\n  const handleFileChange = e => {\n    if (e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n\n  // Left sidebar button handlers (unchanged)\n  const handleSaveChat = () => {\n    const currentDateTime = new Date().toLocaleString();\n    let saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (!Array.isArray(saved)) saved = [];\n    const newChat = {\n      date: currentDateTime,\n      messages: messages\n    };\n    saved.push(newChat);\n    localStorage.setItem('savedChats', JSON.stringify(saved));\n    alert('Chat saved successfully!');\n  };\n  const handleViewChat = () => {\n    const saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (saved && Array.isArray(saved)) {\n      setSavedChats(saved);\n      setShowDropdown(!showDropdown);\n    } else {\n      alert('No saved chats found.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upperSide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperSideTop\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: chatbotlogo,\n            alt: \"Logo\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: () => window.location.reload(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"newchat\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), \"New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: handleSaveChat,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"savechat\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), \"Save Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"midBtn\",\n              onClick: handleViewChat,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: addBtn,\n                alt: \"viewchat\",\n                className: \"addBtn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), \"View Saved\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdownMenu\",\n              children: savedChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdownItem\",\n                onClick: () => {\n                  setMessages(chat.messages);\n                  setShowDropdown(false);\n                },\n                children: chat.date\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lowerSide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats\",\n        children: [messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat ${message.isBot ? \"left\" : \"right\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.isBot ? c2clogo : usericon,\n            alt: message.isBot ? \"Bot\" : \"User\",\n            className: \"chatIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"txt\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: msgEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatFooter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inp\",\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"file-upload-label\",\n            style: {\n              cursor: 'pointer',\n              marginRight: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: upload,\n              alt: \"Upload File\",\n              style: {\n                width: '24px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file-upload\",\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            onChange: handleFileChange,\n            accept: \".txt,.pdf,.docx,.png,.jpg,.jpeg\" // Accept common files, extend as needed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type your message or instruction\",\n            value: input,\n            onKeyDown: handleEnter,\n            onChange: e => setInput(e.target.value),\n            style: {\n              flexGrow: 1,\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send\",\n            onClick: handleSend,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendBtn,\n              alt: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '6px',\n            fontSize: '14px',\n            color: '#666'\n          },\n          children: [\"Selected file: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W0hNcGNfBTFFX3eGLFF170uIIS4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["chatbotlogo","addBtn","sendBtn","usericon","c2clogo","upload","useRef","useState","useEffect","jsxDEV","_jsxDEV","API_URL","App","_s","msgEnd","input","setInput","messages","setMessages","text","isBot","savedChats","setSavedChats","showDropdown","setShowDropdown","selectedFile","setSelectedFile","_msgEnd$current","current","scrollIntoView","behavior","handleSend","trim","userText","name","prev","formData","FormData","append","res","fetch","method","body","ok","Error","status","data","error","message","handleEnter","e","key","shiftKey","preventDefault","handleFileChange","target","files","length","handleSaveChat","currentDateTime","Date","toLocaleString","saved","JSON","parse","localStorage","getItem","Array","isArray","newChat","date","push","setItem","stringify","alert","handleViewChat","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","style","position","map","chat","index","i","ref","display","alignItems","htmlFor","cursor","marginRight","width","id","type","onChange","accept","placeholder","value","onKeyDown","flexGrow","marginTop","fontSize","color","_c","$RefreshReg$"],"sources":["D:/office/react1/react/chatbot/src/App.js"],"sourcesContent":["import './App.css';\nimport chatbotlogo from './assets/chat.jpg';\nimport addBtn from './assets/addBtn.png';\nimport sendBtn from './assets/send.svg';\nimport usericon from './assets/usericon.webp';\nimport c2clogo from './assets/chat.jpg';\nimport upload from './assets/upload.png';\n\nimport { useRef, useState, useEffect } from 'react';\n\n// Replace this with your actual API call URL\nconst API_URL = 'http://localhost:5000/chat';\n\nfunction App() {\n  const msgEnd = useRef(null);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([\n    {\n      text: \"Hi, I am Chatbot, a state-of-the-art language model. I am designed to understand and generate human-like text based on truth.\",\n      isBot: true,\n    }\n  ]);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  useEffect(() => {\n    msgEnd.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (input.trim() === \"\" && !selectedFile) return;\n\n    // Show user message in chat\n    let userText = input.trim();\n\n    if (selectedFile) {\n      userText += `\\n[File attached: ${selectedFile.name}]`;\n    }\n\n    setMessages(prev => [...prev, { text: userText, isBot: false }]);\n\n    // Prepare FormData\n    const formData = new FormData();\n    formData.append('message', input.trim());\n    if (selectedFile) {\n      formData.append('file', selectedFile);\n    }\n\n    setInput('');\n    setSelectedFile(null);\n\n    try {\n      const res = await fetch(API_URL, {\n        method: 'POST',\n        body: formData,\n        // Do NOT set 'Content-Type' header! Browser handles it.\n      });\n\n      if (!res.ok) {\n        throw new Error(`Server error: ${res.status}`);\n      }\n\n      const data = await res.text(); // Change to res.json() if backend returns JSON\n\n      setMessages(prev => [...prev, { text: data, isBot: true }]);\n    } catch (error) {\n      setMessages(prev => [...prev, { text: `Error: ${error.message}`, isBot: true }]);\n    }\n  };\n\n  const handleEnter = async (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      await handleSend();\n    }\n  };\n\n  const handleFileChange = (e) => {\n    if (e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n\n  // Left sidebar button handlers (unchanged)\n  const handleSaveChat = () => {\n    const currentDateTime = new Date().toLocaleString();\n    let saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (!Array.isArray(saved)) saved = [];\n\n    const newChat = {\n      date: currentDateTime,\n      messages: messages,\n    };\n\n    saved.push(newChat);\n    localStorage.setItem('savedChats', JSON.stringify(saved));\n\n    alert('Chat saved successfully!');\n  };\n\n  const handleViewChat = () => {\n    const saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (saved && Array.isArray(saved)) {\n      setSavedChats(saved);\n      setShowDropdown(!showDropdown);\n    } else {\n      alert('No saved chats found.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className=\"upperSide\">\n          <div className=\"upperSideTop\">\n            <img src={chatbotlogo} alt=\"Logo\" className=\"logo\" />\n            <button className=\"midBtn\" onClick={() => window.location.reload()}>\n              <img src={addBtn} alt=\"newchat\" className=\"addBtn\" />\n              New Chat\n            </button>\n            <button className=\"midBtn\" onClick={handleSaveChat}>\n              <img src={addBtn} alt=\"savechat\" className=\"addBtn\" />\n              Save Chat\n            </button>\n            <div style={{ position: \"relative\" }}>\n              <button className=\"midBtn\" onClick={handleViewChat}>\n                <img src={addBtn} alt=\"viewchat\" className=\"addBtn\" />\n                View Saved\n              </button>\n              {showDropdown && (\n                <div className=\"dropdownMenu\">\n                  {savedChats.map((chat, index) => (\n                    <div\n                      key={index}\n                      className=\"dropdownItem\"\n                      onClick={() => {\n                        setMessages(chat.messages);\n                        setShowDropdown(false);\n                      }}\n                    >\n                      {chat.date}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"lowerSide\"></div>\n      </div>\n\n      <div className=\"main\">\n        <div className=\"chats\">\n          {messages.map((message, i) => (\n            <div key={i} className={`chat ${message.isBot ? \"left\" : \"right\"}`}>\n              <img\n                src={message.isBot ? c2clogo : usericon}\n                alt={message.isBot ? \"Bot\" : \"User\"}\n                className=\"chatIcon\"\n              />\n              <p className=\"txt\">{message.text}</p>\n            </div>\n          ))}\n          <div ref={msgEnd} />\n        </div>\n\n        <div className=\"chatFooter\">\n          <div className=\"inp\" style={{ display: \"flex\", alignItems: \"center\" }}>\n            <label htmlFor=\"file-upload\" className=\"file-upload-label\" style={{ cursor: 'pointer', marginRight: '8px' }}>\n              <img src={upload} alt=\"Upload File\" style={{ width: '24px' }} />\n            </label>\n            <input\n              id=\"file-upload\"\n              type=\"file\"\n              style={{ display: 'none' }}\n              onChange={handleFileChange}\n              accept=\".txt,.pdf,.docx,.png,.jpg,.jpeg\" // Accept common files, extend as needed\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Type your message or instruction\"\n              value={input}\n              onKeyDown={handleEnter}\n              onChange={(e) => setInput(e.target.value)}\n              style={{ flexGrow: 1, marginRight: '8px' }}\n            />\n            <button className=\"send\" onClick={handleSend}>\n              <img src={sendBtn} alt=\"Send\" />\n            </button>\n          </div>\n          {selectedFile && (\n            <div style={{ marginTop: '6px', fontSize: '14px', color: '#666' }}>\n              Selected file: <strong>{selectedFile.name}</strong>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}