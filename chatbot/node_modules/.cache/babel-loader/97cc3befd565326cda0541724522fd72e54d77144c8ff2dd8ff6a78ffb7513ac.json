{"ast":null,"code":"var _jsxFileName = \"D:\\\\office\\\\react1\\\\react\\\\chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport chatbotlogo from './assets/chat.jpg';\nimport addBtn from './assets/addBtn.png';\nimport sendBtn from './assets/send.svg';\nimport usericon from './assets/usericon.webp';\nimport c2clogo from './assets/chat.jpg';\nimport voiceIcon from './assets/voiceIcon.png';\nimport stopIcon from './assets/stop.png'; // NEW stop icon\nimport { sendMsgToGroq } from './api';\nimport { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const msgEnd = useRef(null);\n  const [isListening, setIsListening] = useState(false);\n  const [voiceText, setVoiceText] = useState('');\n  const [recognition, setRecognition] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioURL, setAudioURL] = useState(null);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [Input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([{\n    text: \"Hi, I am Chatbot, a state-of-the-art language model. I am designed to understand and generate human-like text based on truth.\",\n    isBot: true\n  }]);\n  useEffect(() => {\n    var _msgEnd$current;\n    (_msgEnd$current = msgEnd.current) === null || _msgEnd$current === void 0 ? void 0 : _msgEnd$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      const recognizer = new SpeechRecognition();\n      recognizer.continuous = false;\n      recognizer.interimResults = false;\n      recognizer.lang = 'en-US';\n      recognizer.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setVoiceText(transcript);\n      };\n      recognizer.onerror = event => {\n        console.error('Voice recognition error', event.error);\n      };\n      setRecognition(recognizer);\n    }\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n    }).catch(err => console.error('Microphone access denied', err));\n  }, []);\n  useEffect(() => {\n    if (mediaRecorder) {\n      mediaRecorder.ondataavailable = e => {\n        const url = URL.createObjectURL(e.data);\n        setAudioURL(url);\n      };\n    }\n  }, [mediaRecorder]);\n  const handleSend = async () => {\n    if (Input.trim() === \"\") return;\n    const text = Input;\n    setInput('');\n    setMessages(prev => [...prev, {\n      text,\n      isBot: false\n    }]);\n    const res = await sendMsgToGroq(text); // <-- Update here\n    setMessages(prev => [...prev, {\n      text: res,\n      isBot: true\n    }]);\n  };\n  const handleEnter = async e => {\n    if (e.key === 'Enter') await handleSend();\n  };\n  const handleVoiceClick = () => {\n    if (isListening) {\n      recognition.stop();\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n      setIsListening(false);\n    } else {\n      setVoiceText('');\n      setAudioURL(null);\n      recognition.start();\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.start();\n      setIsListening(true);\n    }\n  };\n\n  // const handleSaveChat = () => {\n  //   localStorage.setItem('savedChat', JSON.stringify(messages));\n  //   alert('Chat saved successfully!');\n  // };\n  const handleSaveChat = () => {\n    const currentDateTime = new Date().toLocaleString();\n    let saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (!Array.isArray(saved)) {\n      saved = [];\n    }\n    const newChat = {\n      date: currentDateTime,\n      messages: messages\n    };\n    saved.push(newChat);\n    localStorage.setItem('savedChats', JSON.stringify(saved));\n    alert('Chat saved successfully!');\n  };\n\n  // const handleViewChat = () => {\n  //   const saved = JSON.parse(localStorage.getItem('savedChat'));\n  //   if (saved) {\n  //     setMessages(saved);\n  //   } else {\n  //     alert('No saved chats found.');\n  //   }\n  // };\n  const handleViewChat = () => {\n    const saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (saved && Array.isArray(saved)) {\n      setSavedChats(saved);\n      setShowDropdown(!showDropdown); // Toggle open/close\n    } else {\n      alert('No saved chats found.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upperSide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperSideTop\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: chatbotlogo,\n            alt: \"Logo\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: () => window.location.reload(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"newchat\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), \"New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: handleSaveChat,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"savechat\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), \"Save Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"midBtn\",\n              onClick: handleViewChat,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: addBtn,\n                alt: \"viewchat\",\n                className: \"addBtn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), \"View Saved\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdownMenu\",\n              children: savedChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdownItem\",\n                onClick: () => {\n                  setMessages(chat.messages);\n                  setShowDropdown(false);\n                },\n                children: chat.date\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lowerSide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats\",\n        children: [messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat ${message.isBot ? \"left\" : \"right\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.isBot ? c2clogo : usericon,\n            alt: message.isBot ? \"Bot\" : \"User\",\n            className: \"chatIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"txt\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)), audioURL && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat right\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: usericon,\n            alt: \"User\",\n            className: \"chatIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              src: audioURL,\n              style: {\n                marginBottom: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"txt\",\n              children: voiceText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: msgEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatFooter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inp\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Send a Message\",\n            value: Input,\n            onKeyDown: handleEnter,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send\",\n            onClick: handleSend,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendBtn,\n              alt: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"voiceBtn\",\n            onClick: handleVoiceClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: isListening ? stopIcon : voiceIcon,\n              alt: \"Voice Input\",\n              className: \"voiceIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4RsTmqPBXrpCkLLBoc7/aPZQK5k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["chatbotlogo","addBtn","sendBtn","usericon","c2clogo","voiceIcon","stopIcon","sendMsgToGroq","useRef","useState","useEffect","jsxDEV","_jsxDEV","App","_s","msgEnd","isListening","setIsListening","voiceText","setVoiceText","recognition","setRecognition","mediaRecorder","setMediaRecorder","audioURL","setAudioURL","savedChats","setSavedChats","showDropdown","setShowDropdown","Input","setInput","messages","setMessages","text","isBot","_msgEnd$current","current","scrollIntoView","behavior","SpeechRecognition","window","webkitSpeechRecognition","recognizer","continuous","interimResults","lang","onresult","event","transcript","results","onerror","console","error","navigator","mediaDevices","getUserMedia","audio","then","stream","recorder","MediaRecorder","catch","err","ondataavailable","e","url","URL","createObjectURL","data","handleSend","trim","prev","res","handleEnter","key","handleVoiceClick","stop","start","handleSaveChat","currentDateTime","Date","toLocaleString","saved","JSON","parse","localStorage","getItem","Array","isArray","newChat","date","push","setItem","stringify","alert","handleViewChat","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","style","position","map","chat","index","message","i","controls","marginBottom","ref","type","placeholder","value","onKeyDown","onChange","target","_c","$RefreshReg$"],"sources":["D:/office/react1/react/chatbot/src/App.js"],"sourcesContent":["import './App.css';\nimport chatbotlogo from './assets/chat.jpg';\nimport addBtn from './assets/addBtn.png';\nimport sendBtn from './assets/send.svg';\nimport usericon from './assets/usericon.webp';\nimport c2clogo from './assets/chat.jpg';\nimport voiceIcon from './assets/voiceIcon.png';\nimport stopIcon from './assets/stop.png'; // NEW stop icon\nimport { sendMsgToGroq } from './api'\n\nimport { useRef, useState, useEffect } from 'react';\n\nfunction App() {\n  const msgEnd = useRef(null);\n  const [isListening, setIsListening] = useState(false);\n  const [voiceText, setVoiceText] = useState('');\n  const [recognition, setRecognition] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioURL, setAudioURL] = useState(null);\n  const [savedChats, setSavedChats] = useState([]);\n  \n  const [showDropdown, setShowDropdown] = useState(false);\n\n  \n\n\n  const [Input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([\n    {\n      text: \"Hi, I am Chatbot, a state-of-the-art language model. I am designed to understand and generate human-like text based on truth.\",\n      isBot: true,\n    }\n  ]);\n\n  useEffect(() => {\n    msgEnd.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      const recognizer = new SpeechRecognition();\n      recognizer.continuous = false;\n      recognizer.interimResults = false;\n      recognizer.lang = 'en-US';\n\n      recognizer.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        setVoiceText(transcript);\n      };\n\n      recognizer.onerror = (event) => {\n        console.error('Voice recognition error', event.error);\n      };\n\n      setRecognition(recognizer);\n    }\n\n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then(stream => {\n        const recorder = new MediaRecorder(stream);\n        setMediaRecorder(recorder);\n      })\n      .catch(err => console.error('Microphone access denied', err));\n  }, []);\n\n  useEffect(() => {\n    if (mediaRecorder) {\n      mediaRecorder.ondataavailable = (e) => {\n        const url = URL.createObjectURL(e.data);\n        setAudioURL(url);\n      };\n    }\n  }, [mediaRecorder]);\n\n  const handleSend = async () => {\n    if (Input.trim() === \"\") return;\n    const text = Input;\n    setInput('');\n    setMessages(prev => [...prev, { text, isBot: false }]);\n  \n    const res = await sendMsgToGroq(text); // <-- Update here\n    setMessages(prev => [...prev, { text: res, isBot: true }]);\n  };\n\n  const handleEnter = async (e) => {\n    if (e.key === 'Enter') await handleSend();\n  };\n\n  const handleVoiceClick = () => {\n    if (isListening) {\n      recognition.stop();\n      mediaRecorder?.stop();\n      setIsListening(false);\n    } else {\n      setVoiceText('');\n      setAudioURL(null);\n      recognition.start();\n      mediaRecorder?.start();\n      setIsListening(true);\n    }\n  };\n\n  // const handleSaveChat = () => {\n  //   localStorage.setItem('savedChat', JSON.stringify(messages));\n  //   alert('Chat saved successfully!');\n  // };\n  const handleSaveChat = () => {\n    const currentDateTime = new Date().toLocaleString();\n    let saved = JSON.parse(localStorage.getItem('savedChats'));\n  \n    if (!Array.isArray(saved)) {\n      saved = [];\n    }\n  \n    const newChat = {\n      date: currentDateTime,\n      messages: messages,\n    };\n  \n    saved.push(newChat);\n    localStorage.setItem('savedChats', JSON.stringify(saved));\n  \n    alert('Chat saved successfully!');\n  };\n  \n  \n  \n  \n\n  // const handleViewChat = () => {\n  //   const saved = JSON.parse(localStorage.getItem('savedChat'));\n  //   if (saved) {\n  //     setMessages(saved);\n  //   } else {\n  //     alert('No saved chats found.');\n  //   }\n  // };\n  const handleViewChat = () => {\n    const saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (saved && Array.isArray(saved)) {\n      setSavedChats(saved);\n      setShowDropdown(!showDropdown); // Toggle open/close\n    } else {\n      alert('No saved chats found.');\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className=\"upperSide\">\n          <div className=\"upperSideTop\">\n            <img src={chatbotlogo} alt=\"Logo\" className=\"logo\" />\n  \n            <button className=\"midBtn\" onClick={() => window.location.reload()}>\n              <img src={addBtn} alt=\"newchat\" className=\"addBtn\" />\n              New Chat\n            </button>\n  \n            <button className=\"midBtn\" onClick={handleSaveChat}>\n              <img src={addBtn} alt=\"savechat\" className=\"addBtn\" />\n              Save Chat\n            </button>\n  \n            <div style={{ position: \"relative\" }}>\n              <button className=\"midBtn\" onClick={handleViewChat}>\n                <img src={addBtn} alt=\"viewchat\" className=\"addBtn\" />\n                View Saved\n              </button>\n  \n              {showDropdown && (\n                <div className=\"dropdownMenu\">\n                  {savedChats.map((chat, index) => (\n                    <div\n                      key={index}\n                      className=\"dropdownItem\"\n                      onClick={() => {\n                        setMessages(chat.messages);\n                        setShowDropdown(false);\n                      }}\n                    >\n                      {chat.date}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n  \n        <div className=\"lowerSide\"></div>\n      </div>\n  \n      <div className=\"main\">\n        <div className=\"chats\">\n          {messages.map((message, i) => (\n            <div key={i} className={`chat ${message.isBot ? \"left\" : \"right\"}`}>\n              <img\n                src={message.isBot ? c2clogo : usericon}\n                alt={message.isBot ? \"Bot\" : \"User\"}\n                className=\"chatIcon\"\n              />\n              <p className=\"txt\">{message.text}</p>\n            </div>\n          ))}\n  \n          {audioURL && (\n            <div className=\"chat right\">\n              <img\n                src={usericon}\n                alt=\"User\"\n                className=\"chatIcon\"\n              />\n              <div>\n                <audio controls src={audioURL} style={{ marginBottom: \"5px\" }} />\n                <p className=\"txt\">{voiceText}</p>\n              </div>\n            </div>\n          )}\n  \n          <div ref={msgEnd} />\n        </div>\n  \n        <div className=\"chatFooter\">\n          <div className=\"inp\">\n            <input\n              type=\"text\"\n              placeholder=\"Send a Message\"\n              value={Input}\n              onKeyDown={handleEnter}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button className=\"send\" onClick={handleSend}>\n              <img src={sendBtn} alt=\"Send\" />\n            </button>\n            <button className=\"voiceBtn\" onClick={handleVoiceClick}>\n              <img\n                src={isListening ? stopIcon : voiceIcon}\n                alt=\"Voice Input\"\n                className=\"voiceIcon\"\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}