{"ast":null,"code":"var _jsxFileName = \"D:\\\\office\\\\react1\\\\react\\\\chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport chatbotlogo from './assets/chat.jpg';\nimport addBtn from './assets/addBtn.png';\nimport sendBtn from './assets/send.svg';\nimport usericon from './assets/usericon.webp';\nimport c2clogo from './assets/chat.jpg';\nimport { sendMsgToGroq } from './api';\nimport { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const msgEnd = useRef(null);\n  const [Input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([{\n    text: \"Hi, I am Chatbot, a state-of-the-art language model. I am designed to understand and generate human-like text based on truth.\",\n    isBot: true,\n    isFile: false,\n    filename: null\n  }]);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    var _msgEnd$current;\n    (_msgEnd$current = msgEnd.current) === null || _msgEnd$current === void 0 ? void 0 : _msgEnd$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Handle text message send\n  const handleSend = async () => {\n    if (Input.trim() === \"\" && !selectedFile) return;\n    if (selectedFile) {\n      // Send file + optional text message (Input) to backend\n      const fileName = selectedFile.name;\n      setMessages(prev => [...prev, {\n        text: fileName,\n        isBot: false,\n        isFile: true,\n        filename: fileName\n      }]);\n\n      // Prepare file to send\n      const fileText = await readFileContent(selectedFile);\n\n      // You can send file text + optional Input to your backend API\n      const res = await sendMsgToGroq(\"\", fileText); // Assuming API supports file text param\n\n      setMessages(prev => [...prev, {\n        text: res,\n        isBot: true,\n        isFile: false,\n        filename: null\n      }]);\n      setSelectedFile(null);\n      setInput(\"\");\n    } else {\n      // Normal text message\n      const text = Input;\n      setInput('');\n      setMessages(prev => [...prev, {\n        text,\n        isBot: false,\n        isFile: false,\n        filename: null\n      }]);\n      const res = await sendMsgToGroq(text);\n      setMessages(prev => [...prev, {\n        text: res,\n        isBot: true,\n        isFile: false,\n        filename: null\n      }]);\n    }\n  };\n\n  // Read file content as text (for txt files)\n  // For pdf/docx, ideally do backend processing or use libraries\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = () => reject(\"File reading error\");\n\n      // For simplicity, reading as text. For pdf/docx you should send file itself to backend.\n      reader.readAsText(file);\n    });\n  };\n  const handleEnter = async e => {\n    if (e.key === 'Enter') await handleSend();\n  };\n\n  // File input change handler\n  const handleFileChange = e => {\n    if (e.target.files.length > 0) {\n      const file = e.target.files[0];\n      setSelectedFile(file);\n    }\n  };\n  const handleSaveChat = () => {\n    const currentDateTime = new Date().toLocaleString();\n    let saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (!Array.isArray(saved)) saved = [];\n    const newChat = {\n      date: currentDateTime,\n      messages: messages\n    };\n    saved.push(newChat);\n    localStorage.setItem('savedChats', JSON.stringify(saved));\n    alert('Chat saved successfully!');\n  };\n  const handleViewChat = () => {\n    const saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (saved && Array.isArray(saved)) {\n      setSavedChats(saved);\n      setShowDropdown(!showDropdown);\n    } else {\n      alert('No saved chats found.');\n    }\n  };\n\n  // Download chat answers only (bot messages) as txt file\n  const handleDownloadAnswers = () => {\n    const answers = messages.filter(m => m.isBot).map(m => m.text).join(\"\\n\\n\");\n    const blob = new Blob([answers], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'chatbot_answers.txt';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upperSide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upperSideTop\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: chatbotlogo,\n            alt: \"Logo\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: () => window.location.reload(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"newchat\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), \"New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: handleSaveChat,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"savechat\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), \"Save Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midBtn\",\n            onClick: handleDownloadAnswers,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: addBtn,\n              alt: \"download\",\n              className: \"addBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), \"Download Answers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"midBtn\",\n              onClick: handleViewChat,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: addBtn,\n                alt: \"viewchat\",\n                className: \"addBtn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), \"View Saved\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdownMenu\",\n              children: savedChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdownItem\",\n                onClick: () => {\n                  setMessages(chat.messages);\n                  setShowDropdown(false);\n                },\n                children: chat.date\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lowerSide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats\",\n        children: [messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat ${message.isBot ? \"left\" : \"right\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.isBot ? c2clogo : usericon,\n            alt: message.isBot ? \"Bot\" : \"User\",\n            className: \"chatIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), message.isFile ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"txt fileMsg\",\n            children: [\"\\uD83D\\uDCCE \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: message.filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"txt\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: msgEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatFooter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"uploadBtn\",\n            title: \"Upload File\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file-upload\",\n            type: \"file\",\n            accept: \".txt,.pdf,.docx\",\n            style: {\n              display: \"none\"\n            },\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: selectedFile ? `Ready to send ${selectedFile.name}` : \"Send a Message\",\n            value: Input,\n            onKeyDown: handleEnter,\n            onChange: e => setInput(e.target.value),\n            disabled: !!selectedFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send\",\n            onClick: handleSend,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendBtn,\n              alt: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G1CPa0DY+i5bYJa7UWKX8aex8WM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["chatbotlogo","addBtn","sendBtn","usericon","c2clogo","sendMsgToGroq","useRef","useState","useEffect","jsxDEV","_jsxDEV","App","_s","msgEnd","Input","setInput","messages","setMessages","text","isBot","isFile","filename","savedChats","setSavedChats","showDropdown","setShowDropdown","selectedFile","setSelectedFile","_msgEnd$current","current","scrollIntoView","behavior","handleSend","trim","fileName","name","prev","fileText","readFileContent","res","file","Promise","resolve","reject","reader","FileReader","onload","e","target","result","onerror","readAsText","handleEnter","key","handleFileChange","files","length","handleSaveChat","currentDateTime","Date","toLocaleString","saved","JSON","parse","localStorage","getItem","Array","isArray","newChat","date","push","setItem","stringify","alert","handleViewChat","handleDownloadAnswers","answers","filter","m","map","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","src","alt","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","style","position","chat","index","message","i","ref","htmlFor","title","id","accept","display","onChange","placeholder","value","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["D:/office/react1/react/chatbot/src/App.js"],"sourcesContent":["import './App.css';\nimport chatbotlogo from './assets/chat.jpg';\nimport addBtn from './assets/addBtn.png';\nimport sendBtn from './assets/send.svg';\nimport usericon from './assets/usericon.webp';\nimport c2clogo from './assets/chat.jpg';\nimport { sendMsgToGroq } from './api';\n\nimport { useRef, useState, useEffect } from 'react';\n\nfunction App() {\n  const msgEnd = useRef(null);\n  const [Input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([\n    {\n      text: \"Hi, I am Chatbot, a state-of-the-art language model. I am designed to understand and generate human-like text based on truth.\",\n      isBot: true,\n      isFile: false,\n      filename: null,\n    }\n  ]);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  useEffect(() => {\n    msgEnd.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Handle text message send\n  const handleSend = async () => {\n    if (Input.trim() === \"\" && !selectedFile) return;\n\n    if (selectedFile) {\n      // Send file + optional text message (Input) to backend\n      const fileName = selectedFile.name;\n      setMessages(prev => [...prev, { text: fileName, isBot: false, isFile: true, filename: fileName }]);\n      \n      // Prepare file to send\n      const fileText = await readFileContent(selectedFile);\n\n      // You can send file text + optional Input to your backend API\n      const res = await sendMsgToGroq(\"\", fileText); // Assuming API supports file text param\n      \n      setMessages(prev => [...prev, { text: res, isBot: true, isFile: false, filename: null }]);\n      \n      setSelectedFile(null);\n      setInput(\"\");\n    } else {\n      // Normal text message\n      const text = Input;\n      setInput('');\n      setMessages(prev => [...prev, { text, isBot: false, isFile: false, filename: null }]);\n\n      const res = await sendMsgToGroq(text);\n      setMessages(prev => [...prev, { text: res, isBot: true, isFile: false, filename: null }]);\n    }\n  };\n\n  // Read file content as text (for txt files)\n  // For pdf/docx, ideally do backend processing or use libraries\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => resolve(e.target.result);\n      reader.onerror = () => reject(\"File reading error\");\n      \n      // For simplicity, reading as text. For pdf/docx you should send file itself to backend.\n      reader.readAsText(file);\n    });\n  };\n\n  const handleEnter = async (e) => {\n    if (e.key === 'Enter') await handleSend();\n  };\n\n  // File input change handler\n  const handleFileChange = (e) => {\n    if (e.target.files.length > 0) {\n      const file = e.target.files[0];\n      setSelectedFile(file);\n    }\n  };\n\n  const handleSaveChat = () => {\n    const currentDateTime = new Date().toLocaleString();\n    let saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (!Array.isArray(saved)) saved = [];\n\n    const newChat = {\n      date: currentDateTime,\n      messages: messages,\n    };\n\n    saved.push(newChat);\n    localStorage.setItem('savedChats', JSON.stringify(saved));\n\n    alert('Chat saved successfully!');\n  };\n\n  const handleViewChat = () => {\n    const saved = JSON.parse(localStorage.getItem('savedChats'));\n    if (saved && Array.isArray(saved)) {\n      setSavedChats(saved);\n      setShowDropdown(!showDropdown);\n    } else {\n      alert('No saved chats found.');\n    }\n  };\n\n  // Download chat answers only (bot messages) as txt file\n  const handleDownloadAnswers = () => {\n    const answers = messages.filter(m => m.isBot).map(m => m.text).join(\"\\n\\n\");\n    const blob = new Blob([answers], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'chatbot_answers.txt';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <div className=\"upperSide\">\n          <div className=\"upperSideTop\">\n            <img src={chatbotlogo} alt=\"Logo\" className=\"logo\" />\n            <button className=\"midBtn\" onClick={() => window.location.reload()}>\n              <img src={addBtn} alt=\"newchat\" className=\"addBtn\" />\n              New Chat\n            </button>\n            <button className=\"midBtn\" onClick={handleSaveChat}>\n              <img src={addBtn} alt=\"savechat\" className=\"addBtn\" />\n              Save Chat\n            </button>\n            <button className=\"midBtn\" onClick={handleDownloadAnswers}>\n              <img src={addBtn} alt=\"download\" className=\"addBtn\" />\n              Download Answers\n            </button>\n            <div style={{ position: \"relative\" }}>\n              <button className=\"midBtn\" onClick={handleViewChat}>\n                <img src={addBtn} alt=\"viewchat\" className=\"addBtn\" />\n                View Saved\n              </button>\n              {showDropdown && (\n                <div className=\"dropdownMenu\">\n                  {savedChats.map((chat, index) => (\n                    <div\n                      key={index}\n                      className=\"dropdownItem\"\n                      onClick={() => {\n                        setMessages(chat.messages);\n                        setShowDropdown(false);\n                      }}\n                    >\n                      {chat.date}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"lowerSide\"></div>\n      </div>\n\n      <div className=\"main\">\n        <div className=\"chats\">\n          {messages.map((message, i) => (\n            <div key={i} className={`chat ${message.isBot ? \"left\" : \"right\"}`}>\n              <img\n                src={message.isBot ? c2clogo : usericon}\n                alt={message.isBot ? \"Bot\" : \"User\"}\n                className=\"chatIcon\"\n              />\n              {message.isFile ? (\n                <p className=\"txt fileMsg\">\n                  📎 <strong>{message.filename}</strong>\n                </p>\n              ) : (\n                <p className=\"txt\">{message.text}</p>\n              )}\n            </div>\n          ))}\n          <div ref={msgEnd} />\n        </div>\n\n        <div className=\"chatFooter\">\n          <div className=\"inp\">\n            {/* Upload Button */}\n            <label htmlFor=\"file-upload\" className=\"uploadBtn\" title=\"Upload File\">\n              📁\n            </label>\n            <input\n              id=\"file-upload\"\n              type=\"file\"\n              accept=\".txt,.pdf,.docx\"\n              style={{ display: \"none\" }}\n              onChange={handleFileChange}\n            />\n\n            <input\n              type=\"text\"\n              placeholder={selectedFile ? `Ready to send ${selectedFile.name}` : \"Send a Message\"}\n              value={Input}\n              onKeyDown={handleEnter}\n              onChange={(e) => setInput(e.target.value)}\n              disabled={!!selectedFile}\n            />\n            <button className=\"send\" onClick={handleSend}>\n              <img src={sendBtn} alt=\"Send\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}